/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as SendEmailRouteImport } from './routes/sendEmail'
import { Route as SafeSelectedRouteImport } from './routes/safeSelected'
import { Route as RecoverRouteImport } from './routes/recover'
import { Route as MenuRouteImport } from './routes/menu'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as InfopageRouteImport } from './routes/infopage'
import { Route as HomepageRouteImport } from './routes/homepage'
import { Route as HelpCenterSelectedRouteImport } from './routes/helpCenterSelected'
import { Route as DangerSelectedRouteImport } from './routes/dangerSelected'
import { Route as ChooseOptionRouteImport } from './routes/chooseOption'
import { Route as AddSafeRouteImport } from './routes/addSafe'
import { Route as AddHelpCenterRouteImport } from './routes/addHelpCenter'
import { Route as AddDangerRouteImport } from './routes/addDanger'
import { Route as IndexRouteImport } from './routes/index'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const SendEmailRoute = SendEmailRouteImport.update({
  id: '/sendEmail',
  path: '/sendEmail',
  getParentRoute: () => rootRouteImport,
} as any)
const SafeSelectedRoute = SafeSelectedRouteImport.update({
  id: '/safeSelected',
  path: '/safeSelected',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverRoute = RecoverRouteImport.update({
  id: '/recover',
  path: '/recover',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuRoute = MenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const InfopageRoute = InfopageRouteImport.update({
  id: '/infopage',
  path: '/infopage',
  getParentRoute: () => rootRouteImport,
} as any)
const HomepageRoute = HomepageRouteImport.update({
  id: '/homepage',
  path: '/homepage',
  getParentRoute: () => rootRouteImport,
} as any)
const HelpCenterSelectedRoute = HelpCenterSelectedRouteImport.update({
  id: '/helpCenterSelected',
  path: '/helpCenterSelected',
  getParentRoute: () => rootRouteImport,
} as any)
const DangerSelectedRoute = DangerSelectedRouteImport.update({
  id: '/dangerSelected',
  path: '/dangerSelected',
  getParentRoute: () => rootRouteImport,
} as any)
const ChooseOptionRoute = ChooseOptionRouteImport.update({
  id: '/chooseOption',
  path: '/chooseOption',
  getParentRoute: () => rootRouteImport,
} as any)
const AddSafeRoute = AddSafeRouteImport.update({
  id: '/addSafe',
  path: '/addSafe',
  getParentRoute: () => rootRouteImport,
} as any)
const AddHelpCenterRoute = AddHelpCenterRouteImport.update({
  id: '/addHelpCenter',
  path: '/addHelpCenter',
  getParentRoute: () => rootRouteImport,
} as any)
const AddDangerRoute = AddDangerRouteImport.update({
  id: '/addDanger',
  path: '/addDanger',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/addDanger': typeof AddDangerRoute
  '/addHelpCenter': typeof AddHelpCenterRoute
  '/addSafe': typeof AddSafeRoute
  '/chooseOption': typeof ChooseOptionRoute
  '/dangerSelected': typeof DangerSelectedRoute
  '/helpCenterSelected': typeof HelpCenterSelectedRoute
  '/homepage': typeof HomepageRoute
  '/infopage': typeof InfopageRoute
  '/logout': typeof LogoutRoute
  '/menu': typeof MenuRoute
  '/recover': typeof RecoverRoute
  '/safeSelected': typeof SafeSelectedRoute
  '/sendEmail': typeof SendEmailRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/addDanger': typeof AddDangerRoute
  '/addHelpCenter': typeof AddHelpCenterRoute
  '/addSafe': typeof AddSafeRoute
  '/chooseOption': typeof ChooseOptionRoute
  '/dangerSelected': typeof DangerSelectedRoute
  '/helpCenterSelected': typeof HelpCenterSelectedRoute
  '/homepage': typeof HomepageRoute
  '/infopage': typeof InfopageRoute
  '/logout': typeof LogoutRoute
  '/menu': typeof MenuRoute
  '/recover': typeof RecoverRoute
  '/safeSelected': typeof SafeSelectedRoute
  '/sendEmail': typeof SendEmailRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/addDanger': typeof AddDangerRoute
  '/addHelpCenter': typeof AddHelpCenterRoute
  '/addSafe': typeof AddSafeRoute
  '/chooseOption': typeof ChooseOptionRoute
  '/dangerSelected': typeof DangerSelectedRoute
  '/helpCenterSelected': typeof HelpCenterSelectedRoute
  '/homepage': typeof HomepageRoute
  '/infopage': typeof InfopageRoute
  '/logout': typeof LogoutRoute
  '/menu': typeof MenuRoute
  '/recover': typeof RecoverRoute
  '/safeSelected': typeof SafeSelectedRoute
  '/sendEmail': typeof SendEmailRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/addDanger'
    | '/addHelpCenter'
    | '/addSafe'
    | '/chooseOption'
    | '/dangerSelected'
    | '/helpCenterSelected'
    | '/homepage'
    | '/infopage'
    | '/logout'
    | '/menu'
    | '/recover'
    | '/safeSelected'
    | '/sendEmail'
    | '/signin'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/addDanger'
    | '/addHelpCenter'
    | '/addSafe'
    | '/chooseOption'
    | '/dangerSelected'
    | '/helpCenterSelected'
    | '/homepage'
    | '/infopage'
    | '/logout'
    | '/menu'
    | '/recover'
    | '/safeSelected'
    | '/sendEmail'
    | '/signin'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/addDanger'
    | '/addHelpCenter'
    | '/addSafe'
    | '/chooseOption'
    | '/dangerSelected'
    | '/helpCenterSelected'
    | '/homepage'
    | '/infopage'
    | '/logout'
    | '/menu'
    | '/recover'
    | '/safeSelected'
    | '/sendEmail'
    | '/signin'
    | '/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddDangerRoute: typeof AddDangerRoute
  AddHelpCenterRoute: typeof AddHelpCenterRoute
  AddSafeRoute: typeof AddSafeRoute
  ChooseOptionRoute: typeof ChooseOptionRoute
  DangerSelectedRoute: typeof DangerSelectedRoute
  HelpCenterSelectedRoute: typeof HelpCenterSelectedRoute
  HomepageRoute: typeof HomepageRoute
  InfopageRoute: typeof InfopageRoute
  LogoutRoute: typeof LogoutRoute
  MenuRoute: typeof MenuRoute
  RecoverRoute: typeof RecoverRoute
  SafeSelectedRoute: typeof SafeSelectedRoute
  SendEmailRoute: typeof SendEmailRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sendEmail': {
      id: '/sendEmail'
      path: '/sendEmail'
      fullPath: '/sendEmail'
      preLoaderRoute: typeof SendEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/safeSelected': {
      id: '/safeSelected'
      path: '/safeSelected'
      fullPath: '/safeSelected'
      preLoaderRoute: typeof SafeSelectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover': {
      id: '/recover'
      path: '/recover'
      fullPath: '/recover'
      preLoaderRoute: typeof RecoverRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/infopage': {
      id: '/infopage'
      path: '/infopage'
      fullPath: '/infopage'
      preLoaderRoute: typeof InfopageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homepage': {
      id: '/homepage'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof HomepageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/helpCenterSelected': {
      id: '/helpCenterSelected'
      path: '/helpCenterSelected'
      fullPath: '/helpCenterSelected'
      preLoaderRoute: typeof HelpCenterSelectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dangerSelected': {
      id: '/dangerSelected'
      path: '/dangerSelected'
      fullPath: '/dangerSelected'
      preLoaderRoute: typeof DangerSelectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chooseOption': {
      id: '/chooseOption'
      path: '/chooseOption'
      fullPath: '/chooseOption'
      preLoaderRoute: typeof ChooseOptionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/addSafe': {
      id: '/addSafe'
      path: '/addSafe'
      fullPath: '/addSafe'
      preLoaderRoute: typeof AddSafeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/addHelpCenter': {
      id: '/addHelpCenter'
      path: '/addHelpCenter'
      fullPath: '/addHelpCenter'
      preLoaderRoute: typeof AddHelpCenterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/addDanger': {
      id: '/addDanger'
      path: '/addDanger'
      fullPath: '/addDanger'
      preLoaderRoute: typeof AddDangerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddDangerRoute: AddDangerRoute,
  AddHelpCenterRoute: AddHelpCenterRoute,
  AddSafeRoute: AddSafeRoute,
  ChooseOptionRoute: ChooseOptionRoute,
  DangerSelectedRoute: DangerSelectedRoute,
  HelpCenterSelectedRoute: HelpCenterSelectedRoute,
  HomepageRoute: HomepageRoute,
  InfopageRoute: InfopageRoute,
  LogoutRoute: LogoutRoute,
  MenuRoute: MenuRoute,
  RecoverRoute: RecoverRoute,
  SafeSelectedRoute: SafeSelectedRoute,
  SendEmailRoute: SendEmailRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
